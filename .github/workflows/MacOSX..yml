# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
name: MacOS Build and Test
on:
  push:
    branches: [ master ]
    tags:
      - "*"
  pull_request:
    branches: [ master ]

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        python-version: [3.7,3.8,3.9]
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
            python-version: ${{ matrix.python-version }}
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install w/dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install pytest-cov
          pip install .
      - name : Cache PIP
        uses: actions/cache@v2
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: PreCommit
        uses: pre-commit/action@v2.0.0
      - name: Unit Testing
        run: |
          pytest -x -v tests/unit
      - name: Integration Testing
        run: |
          pytest -x -v tests/integration
      - name: Install Twine/Wheel
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
         pip install wheel twine setuptools
         python setup.py sdist bdist_wheel
      - name: Publish distribution to Test PyP
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload --repository testpypi dist/*.whl
          twine upload --repository pypi dist/*.whl
      - name: Publish source to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        if: startsWith(github.ref, 'refs/tags/v') && matrix.python-version == '3.8'
        run: |
          twine upload --repository pypi dist/*.tar.gz
          twine upload --repository testpypi dist/*.tar.gz
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
